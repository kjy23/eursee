name: Run Python Scripts and Push Results

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 0 点 0 分执行
  push:
    branches:
      - main

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout 仓库
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # 3. 安装依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. 运行 eursee.py 生成 Eur.m3u 文件
      - name: Run eursee.py to generate Eur.m3u
        run: |
          python eursee.py

      # 5. 检查 Eur.m3u 是否成功生成
      - name: Check if Eur.m3u is created
        run: |
          if [ ! -f "Eur.m3u" ]; then
            echo "Error: Eur.m3u was not created."
            exit 1
          fi

      # 6. 提交并推送 Eur.m3u 文件到 GitHub
      - name: Commit and push Eur.m3u file
        run: |
          git config --global user.email "youremail@example.com"
          git config --global user.name "Your Name"
          
          git add Eur.m3u
          git commit -m "Add new Eur.m3u file"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 7. 运行 eur.py 更新 Eur.m3u 文件
      - name: Run eur.py to update and generate eur.m3u
        run: |
          python eur.py

      # 8. 检查 eur.m3u 是否成功生成
      - name: Check if eur.m3u is created
        run: |
          if [ ! -f "eur.m3u" ]; then
            echo "Error: eur.m3u was not created."
            exit 1
          fi

      # 9. 提交并推送 eur.m3u 文件到 GitHub
      - name: Commit and push eur.m3u file
        run: |
          git config --global user.email "youremail@example.com"
          git config --global user.name "Your Name"
          
          git add eur.m3u
          git commit -m "Update eur.m3u file"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
